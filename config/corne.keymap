/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/ {
    behaviors {
        gresc: gresc {
            compatible = "zmk,behavior-mod-morph";
            label = "GRESC";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp TILDE>;

            mods = <(MOD_LGUI)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };

        combo_return-base {
            timeout-ms = <50>;
            key-positions = <34 35>;
            bindings = <&to BASE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R                &kp T                   &kp Y      &kp U      &kp I        &kp O    &kp P     &kp BACKSPACE
&kp LCTRL  &kp A  &kp S  &kp D     &kp F                &kp G                   &kp H      &kp J      &kp K        &kp L    &kp SEMI  &kp SQT
&gresc     &kp Z  &kp X  &kp C     &kp V                &kp B                   &kp N      &kp M      &kp COMMA    &kp DOT  &kp FSLH  &kp RIGHT_ALT
                         &kp LGUI  &lt LOWER LG(SPACE)  &mt LEFT_SHIFT SPACE    &kp ENTER  &mo RAISE  &tog ADJUST
            >;
        };

        lower_layer {
            bindings = <
&kp TAB         &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT             &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH
&kp LCTRL       &kp N1           &kp N2       &kp N3    &kp N4      &kp N5                  &kp MINUS       &kp EQUAL      &kp GRAVE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp LEFT_SHIFT  &kp N6           &kp N7       &kp N8    &kp N9      &kp N0                  &kp UNDERSCORE  &kt PLUS       &kp TILDE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RIGHT_ALT
                                              &kp LGUI  &trans      &mt LEFT_SHIFT SPACE    &kp ENTER       &trans         &trans
            >;
        };

        raise_layer {
            bindings = <
&kp TAB         &kp N1      &kp N2      &kp N3             &kp N4           &kp N5                  &kp N6         &kp N7          &kp N8          &kp N9     &kp N0  &kp BACKSPACE
&kp LCTRL       &trans      &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &kp HOME                &kp PAGE_UP    &trans          &kp UP_ARROW    &trans     &trans  &trans
&kp LEFT_SHIFT  &caps_word  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp END                 &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &kp RIGHT_ALT
                                        &kp LEFT_GUI       &trans           &mt LEFT_SHIFT SPACE    &kp ENTER      &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&kp TAB         &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                  &kp F6     &kp F7          &kp F8          &kp F9           &kp F10  &mt F11 F12
&kp LCTRL       &bt BT_CLR    &out OUT_TOG  &trans        &trans        &trans                  &trans     &trans          &kp UP_ARROW    &trans           &trans   &trans
&kt LEFT_SHIFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans   &kp RIGHT_ALT
                                            &kp LEFT_GUI  &trans        &mt LEFT_SHIFT SPACE    &kp ENTER  &trans          &trans
            >;
        };
    };
};
