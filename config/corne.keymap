/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE     0
#define LOWER    1
#define RAISE    2
#define FUNCTION 3

// Behavior Overrides

&lt {
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
};

/ {
    macros {
        spotlight: spotlight {
            label = "spotlight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_del {
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };

        combo_return-base {
            key-positions = <34 35>;
            bindings = <&to BASE>;
        };
    };

    behaviors {
        tab_tilde: tab_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_TILDE";
            bindings = <&kp TAB>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        td_multi: tap_dance_multi {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MULTI";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&spotlight>;
        };

        cm: code_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "CODE_ROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            retro-tap;
        };

        sm: space_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_MOD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&tab_tilde  &kp Q  &kp W  &kp E     &kp R      &kp T               &kp Y    &kp U           &kp I      &kp O    &kp P     &kp NON_US_BACKSLASH
&cm LCTRL   &kp A  &kp S  &kp D     &kp F      &kp G               &kp H    &kp J           &kp K      &kp L    &kp SEMI  &kp SQT
&cm LSHIFT  &kp Z  &kp X  &kp C     &kp V      &kp B               &kp N    &kp M           &kp COMMA  &kp DOT  &kp FSLH  &kp RALT
                          &kp LGUI  &mo LOWER  &sm LSHIFT SPACE    &kp RET  &lt RAISE BSPC  &td_multi
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp N5         &kp MINUS       &kp EQUAL      &kp GRAVE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&trans  &kp N6           &kp N7       &kp N8    &kp N9      &kp N0         &kp UNDERSCORE  &kt PLUS       &kp TILDE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                      &trans    &trans      &trans         &trans          &trans         &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp N1        &kp N2      &kp N3             &kp N4           &kp N5      &kp N6         &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans  &none         &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &kp HOME    &kp PAGE_UP    &none     &kp UP    &none      &none   &none
&trans  &kp CAPSLOCK  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp END     &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &none   &trans
                                  &trans             &trans           &trans      &trans         &trans    &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &mt F11 F12
&trans  &bt BT_CLR    &out OUT_TOG  &none         &none         &none           &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none    &none
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none     &none     &none   &none      &trans   &trans
                                    &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Function_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
