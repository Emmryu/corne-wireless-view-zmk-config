/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE     0
#define LOWER    1
#define RAISE    2
#define FUNCTION 3

// Behavior Overrides

&lt {
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
};

/ {
    macros {
        spotlight: spotlight {
            label = "spotlight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_del {
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };

        combo_return-base {
            key-positions = <34 35>;
            bindings = <&to BASE>;
        };
    };

    behaviors {
        td_multi_gui: tap_dance_multi_gui {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MULTI_GUI";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LGUI>, <&spotlight>;
        };

        sm: space_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_MOD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E          &kp R      &kp T                   &kp Y      &kp U                &kp I         &kp O      &kp P          &kp NON_US_BACKSLASH
&kp LEFT_SHIFT    &kp A  &kp S  &kp D          &kp F      &kp G                   &kp H      &kp J                &kp K         &kp L      &kp SEMICOLON  &kp APOSTROPHE
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C          &kp V      &kp B                   &kp N      &kp M                &kp COMMA     &kp TILDE  &kp PERIOD     &kp SLASH
                                &td_multi_gui  &mo LOWER  &sm LEFT_SHIFT SPACE    &kp ENTER  &lt RAISE BACKSPACE  &kp LEFT_ALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB           &kp EXCLAMATION  &kp AT  &kp HASH       &kp DOLLAR  &kp PERCENT             &kp CARET       &kp AMPERSAND        &kp STAR      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH
&kp LEFT_SHIFT    &kp N1           &kp N2  &kp N3         &kp N4      &kp N5                  &kp MINUS       &kp EQUAL            &kp GRAVE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp LEFT_CONTROL  &kp N6           &kp N7  &kp N8         &kp N9      &kp N0                  &kp UNDERSCORE  &kt PLUS             &kp TILDE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ESC
                                           &td_multi_gui  &trans      &sm LEFT_SHIFT SPACE    &kp ENTER       &lt RAISE BACKSPACE  &kp LEFT_ALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB           &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4  &kp HOME                &kp PG_UP  &none     &kp UP        &none      &none  &kp BACKSPACE
&kp LEFT_SHIFT    &bt BT_SEL 0  &kp C_PREV    &kp C_PP       &kp C_NEXT    &kp END                 &kp PG_DN  &kp LEFT  &kp DOWN      &kp RIGHT  &none  &none
&kp LEFT_CONTROL  &kp CAPSLOCK  &kp C_MUTE    &kp C_VOL_DN   &kp C_VOL_UP  &bt BT_CLR              &none      &none     &none         &none      &none  &kp ESC
                                              &td_multi_gui  &mo LOWER     &sm LEFT_SHIFT SPACE    &kp ENTER  &trans    &kp LEFT_ALT
            >;
        };

        function_layer {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4         &kp F5        &kp F6                  &kp F7     &kp F8               &kp F9        &kp F10  &kp F11  &kp F12
&none       &none         &none         &none          &none         &none                   &none      &none                &none         &none    &none    &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4            &none      &none                &none         &none    &none    &kp ESC
                                        &td_multi_gui  &mo LOWER     &sm LEFT_SHIFT SPACE    &kp ENTER  &lt RAISE BACKSPACE  &kp LEFT_ALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        function_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
