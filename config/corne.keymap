/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE     0
#define LOWER    1
#define RAISE    2
#define FUNCTION 3

// Behavior Overrides

&lt {
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
};

/ {
    macros {
        spotlight: spotlight {
            label = "spotlight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_del {
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };

        combo_return-base {
            key-positions = <34 35>;
            bindings = <&to BASE>;
        };
    };

    behaviors {
        tab_tilde: tab_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_TILDE";
            bindings = <&kp TAB>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        td_multi: tap_dance_multi {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MULTI";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LGUI>, <&spotlight>;
        };

        sm: space_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_MOD";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&tab_tilde  &kp Q  &kp W  &kp E      &kp R      &kp T               &kp Y    &kp U           &kp I         &kp O    &kp P     &kp NUBS
&kp LCTRL   &kp A  &kp S  &kp D      &kp F      &kp G               &kp H    &kp J           &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C      &kp V      &kp B               &kp N    &kp M           &kp COMMA     &kp DOT  &kp FSLH  &kp RALT
                          &td_multi  &mo LOWER  &sm LSHIFT SPACE    &kp RET  &lt RAISE BSPC  &mo FUNCTION
            >;
        };

        lower_layer {
            bindings = <
&tab_tilde  &kp EXCLAMATION  &kp AT  &kp HASH   &kp DOLLAR  &kp PERCENT         &kp CARET  &kp AMPERSAND   &kp STAR      &kp LPAR  &kp RPAR  &kp NUBS
&trans      &kp N1           &kp N2  &kp N3     &kp N4      &kp N5              &kp MINUS  &kp EQUAL       &kp GRAVE     &kp LBKT  &kp RBKT  &kp PIPE
&trans      &kp N6           &kp N7  &kp N8     &kp N9      &kp N0              &kp UNDER  &kt PLUS        &kp TILDE     &kp LBRC  &kp RBRC  &trans
                                     &td_multi  &mo LOWER   &sm LSHIFT SPACE    &trans     &lt RAISE BSPC  &mo FUNCTION
            >;
        };

        raise_layer {
            bindings = <
&tab_tilde  &kp N1        &kp N2      &kp N3             &kp N4           &kp N5              &kp N6     &kp N7          &kp N8        &kp N9     &kp N0  &kp BSPC
&trans      &none         &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &kp HOME            &kp PG_UP  &none           &kp UP        &none      &none   &none
&trans      &kp CAPSLOCK  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp END             &kp PG_DN  &kp LEFT        &kp DOWN      &kp RIGHT  &none   &trans
                                      &td_multi          &mo LOWER        &sm LSHIFT SPACE    &trans     &lt RAISE BSPC  &mo FUNCTION
            >;
        };

        function_layer {
            bindings = <
&tab_tilde  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5              &kp F6    &kp F7            &kp F8        &kp F9     &kp F10  &kp F11
&trans      &bt BT_CLR    &out OUT_TOG  &none         &none         &none               &kp LEFT  &kp DOWN          &kp UP        &kp RIGHT  &none    &kp F12
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &none     &none             &none         &none      &trans   &trans
                                        &td_multi     &mo LOWER     &sm LSHIFT SPACE    &trans    &lt RAISE BSPC    &mo FUNCTION
            >;
        };
    };
};
