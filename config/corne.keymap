/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <280>;
    flavor = "balanced";
    require-prior-idle-ms = <250>;
};

&sk {
    quick-release;
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 37 38 36 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            require-prior-idle-ms = <250>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 37 36 38 39 40 41>;
            require-prior-idle-ms = <250>;
        };

        Hold_Pref_Layer: Hold_Pref_Layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREF_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        Tap_Pref_Layer: Tap_Pref_Layer {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREF_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
        };

        Hold_Pref_KP: Hold_Pref_KP {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREF_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 41 35 23 11>;
        };

        Tap_Pref_KP: Tap_Pref_KP {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREF_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
        };
    };

    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&trans  &kp Q            &kp W            &kp F         &kp P                     &kp B                     &kp J                     &mt AMPERSAND L                     &mt ASTERISK U     &mt CARET Y      &mt DOUBLE_QUOTES SQT  &trans
&trans  &hml LEFT_WIN A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T         &kp G                     &hmr MINUS M              &mt DOLLAR N                        &mt PERCENT E      &hmr LEFT_ALT I  &hmr LEFT_WIN O        &trans
&trans  &mt LCTRL Z      &kp X            &kp C         &kp D                     &kp V                     &kp K                     &mt EXCL H                          &mt AT_SIGN COMMA  &mt HASH PERIOD  &mt QUESTION SLASH     &trans
                                          &mo 4         &Tap_Pref_KP LCTRL SPACE  &Hold_Pref_Layer 1 TAB    &Hold_Pref_Layer 2 ENTER  &Hold_Pref_KP LEFT_SHIFT BACKSPACE  &kp DELETE
            >;
        };

        Num_Layer {
            bindings = <
&trans      &kp ESCAPE  &kp GRAVE  &kp ENTER  &kp BACKSPACE  &kp DELETE                           &trans                               &kp N7        &kp N8      &kp N9  &mt PLUS EQUAL       &trans
&caps_word  &kp LGUI    &kp LALT   &kp LCTRL  &kp LSHFT      &kp PERIOD                           &kp MINUS                            &kp N4        &kp N5      &kp N6  &mt COLON SEMICOLON  &trans
&trans      &kp LC(Z)   &kp LC(X)  &kp LC(C)  &kp LC(V)      &mt LEFT_BRACKET LEFT_PARENTHESIS    &mt RIGHT_BRACKET RIGHT_PARENTHESIS  &kp NUMBER_1  &kp N2      &kp N3  &mt BACKSLASH SLASH  &trans
                                   &trans     &trans         &trans                               &Hold_Pref_Layer 3 ENTER             &kp N0        &kp PERIOD
            >;

            label = "Numbers";
        };

        Nav_Layer {
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans                    &kp PAGE_UP    &kp HOME  &kp UP_ARROW  &kp END    &trans  &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans                    &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans
&trans  &kp LC(Z)     &kp LC(X)     &kp LC(C)  &kp LC(V)       &trans                    &trans         &trans    &trans        &trans     &trans  &trans
                                    &trans     &trans          &Hold_Pref_Layer 3 TAB    &trans         &trans    &none
            >;

            label = "Navigate";
        };

        Sym_Layer {
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans                  &trans                 &kp AMPERSAND    &kp ASTERISK  &trans     &kp PLUS      &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &kp PERIOD              &kp UNDER              &kp DOLLAR       &kp PERCENT   &kp CARET  &kp COLON     &trans
&trans  &kp LC(Z)     &kp LC(X)     &kp LC(C)  &kp LC(V)       &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp QUESTION  &trans
                                    &trans     &trans          &trans                  &trans                 &trans           &trans
            >;

            label = "Symbols";
        };

        Fun_Layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp C_BRIGHTNESS_INC    &kp C_BRIGHTNESS_INC  &kp C_PREVIOUS   &kp C_PLAY_PAUSE  &kp C_NEXT  &trans    &to 5
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp C_BRIGHTNESS_DEC    &kp TAB               &kp LSHFT        &kp LCTRL         &kp LALT    &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans                  &kp C_BRIGHTNESS_DEC  &bt BT_NXT       &out OUT_TOG      &bt BT_CLR  &trans    &trans
                         &trans  &trans  &trans                  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP  &kp C_MUTE
            >;

            label = "Function";
        };

        Game_Layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R      &kp T             &kp Y  &kp U  &kp I      &kp O    &kp P     &to 0
&kp CAPS   &kp A  &kp S  &kp D      &kp F      &kp G             &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V      &kp B             &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &kp SPACE  &kp LEFT_SHIFT    &mo 1  &mo 2  &mo 4
            >;

            label = "Gaming";
        };
    };
};
