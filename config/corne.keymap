/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_fr.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&trans  &kp FR_A  &kp FR_Z  &kp FR_E  &kp FR_R      &kp FR_T    &kp FR_Y      &kp FR_U        &kp FR_I     &kp FR_O     &kp FR_P  &trans
&trans  &kp FR_Q  &kp FR_S  &kp FR_D  &kp FR_F      &kp FR_G    &kp FR_H      &kp FR_J        &kp FR_K     &kp FR_L     &kp FR_M  &trans
&trans  &kp FR_W  &kp FR_X  &kp FR_C  &kp FR_V      &kp FR_B    &kp FR_N  &kp FR_COMMA   &kp FR_PERIOD  &kp FR_PIPE  &kp FR_FSLH  &trans
                            &kp LCMD     &mo 1  &kp FR_SPACE     &kp RET         &mo 2  &kp LEFT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&trans       &kp TAB  &kp FR_N7  &kp FR_N8  &kp FR_N9  &bt BT_SEL 0           &trans      &kp UP_ARROW              &trans            &trans            &trans  &trans
&trans  &bt BT_SEL 0  &kp FR_N4  &kp FR_N5  &kp FR_N6  &bt BT_SEL 1         &kp LEFT          &kp DOWN     &kp RIGHT_ARROW            &trans            &trans  &trans
&trans     &kp FR_N0  &kp FR_N1  &kp FR_N2  &kp FR_N3  &bt BT_SEL 3           &trans  &kp FR_SEMICOLON  &kp FR_EXCLAMATION  &kp FR_AMPERSAND  &kp FR_BACKSLASH  &trans
                                  &kp LGUI     &trans     &kp SPACE    &kp BACKSPACE            &trans            &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&none   &kp FR_EXCL     &kp FR_AT  &kp FR_HASH  &kp FR_DOLLAR  &kp FR_PERCENT    &kp FR_CARET   &kp FR_AMPS      &kp FR_ASTERISK  &kp FR_LEFT_PARENTHESIS  &kp FR_RIGHT_PARENTHESIS      &kp BSPC
&none  &out OUT_BLE  &out OUT_USB       &trans         &trans          &trans    &kp FR_MINUS  &kp FR_EQUAL  &kp FR_LEFT_BRACKET     &kp FR_RIGHT_BRACKET          &kp FR_BACKSLASH  &kp FR_GRAVE
&none        &trans        &trans       &trans         &trans          &trans    &kp FR_UNDER   &kp FR_PLUS    &kp FR_LEFT_BRACE       &kp FR_RIGHT_BRACE               &kp FR_PIPE  &kp FR_TILDE
                                      &kp LGUI         &trans       &kp SPACE         &kp RET        &trans             &kp RALT
            >;
        };
    };
};
