/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_del {
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };

        combo_return-base {
            key-positions = <34 35>;
            bindings = <&to BASE>;
        };
    };

    behaviors {
        tab_tilde: tab_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_TILDE";
            bindings = <&kp TAB>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&gresc      &kp Q  &kp W  &kp E     &kp R                &kp T               &kp Y    &kp U           &kp I        &kp O    &kp P     &kp NON_US_BACKSLASH
&kp LCTRL   &kp A  &kp S  &kp D     &kp F                &kp G               &kp H    &kp J           &kp K        &kp L    &kp SEMI  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C     &kp V                &kp B               &kp N    &kp M           &kp COMMA    &kp DOT  &kp FSLH  &kp RALT
                          &kp LGUI  &lt LOWER LG(SPACE)  &mt LSHIFT SPACE    &kp RET  &lt RAISE BSPC  &tog ADJUST
            >;
        };

        lower_layer {
            bindings = <
&gresc  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT         &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp N5              &kp MINUS       &kp EQUAL      &kp GRAVE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&trans  &kp N6           &kp N7       &kp N8    &kp N9      &kp N0              &kp UNDERSCORE  &kt PLUS       &kp TILDE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                      &trans    &trans      &mt LSHIFT SPACE    &trans          &kp BSPC       &trans
            >;
        };

        raise_layer {
            bindings = <
&gresc  &kp N1        &kp N2      &kp N3             &kp N4           &kp N5              &kp N6         &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans  &none         &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &kp HOME            &kp PAGE_UP    &none     &kp UP    &none      &none   &none
&trans  &kp CAPSLOCK  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp END             &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &none   &none
                                  &trans             &trans           &mt LSHIFT SPACE    &trans         &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&gresc  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5              &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &mt F11 F12
&trans  &bt BT_CLR    &out OUT_TOG  &none         &none         &none               &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none    &none
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &none     &none     &none   &none      &trans   &none
                                    &trans        &trans        &mt LSHIFT SPACE    &trans    &kp BSPC  &trans
            >;
        };
    };
};
