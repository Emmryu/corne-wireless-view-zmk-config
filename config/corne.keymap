/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <280>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 37 38 36>;
        };
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 37 36 38 39 40 41>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Navigate {
            bindings = <&mo 2>;
            key-positions = <38 39>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB     &kp Q            &kp W            &kp F         &kp P              &kp B         &kp J           &mt AMPERSAND L  &mt ASTERISK U     &mt PERCENT Y    &mt DOUBLE_QUOTES SQT  &mt COLON SEMICOLON
&caps_word  &hml LEFT_WIN A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &hml TAB G    &hmr TAB M      &mt DOLLAR N     &mt CARET E        &hmr LEFT_ALT I  &hmr LEFT_WIN O        &kp ENTER
&kp DELETE  &kp Z            &kp X            &kp C         &kp D              &kp V         &kp K           &mt EXCL H       &mt AT_SIGN COMMA  &mt HASH PERIOD  &mt QUESTION SLASH     &mt UNDERSCORE MINUS
                                              &kp LCTRL     &kp SPACE          &mo 1         &sk LEFT_SHIFT  &kp BACKSPACE    &mo 3
            >;
        };

        Num_Layer {
            bindings = <
&kp ESCAPE    &kp GRAVE  &kp BACKSLASH  &kp ENTER  &kp BACKSPACE  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp N7        &kp N8      &kp N9  &kp EQUAL  &mt COLON SEMICOLON
&kp CAPSLOCK  &kp LGUI   &kp LALT       &kp LCTRL  &kp LSHFT      &kp TAB                 &kp SPACE              &kp N4        &kp N5      &kp N6  &kp GRAVE  &kp ENTER
&trans        &kp LC(Z)  &kp LC(X)      &kp LC(C)  &kp LC(V)      &kp LBKT                &kp RBKT               &kp NUMBER_1  &kp N2      &kp N3  &kp FSLH   &mt UNDERSCORE MINUS
                                        &trans     &trans         &trans                  &trans                 &kp N0        &kp PERIOD
            >;

            label = "Numbers";
        };

        Nav_Layer {
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &kp PAGE_UP    &trans    &kp UP_ARROW   &trans       &kp HOME  &trans
&out OUT_TOG  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL     &kp LEFT_SHIFT  &kp TAB         &kp PAGE_DOWN  &kp LEFT  &kp DOWN       &kp RIGHT    &kp END   &trans
&trans        &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)       &trans          &kp INS        &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END   &trans
                                          &trans        &trans          &trans          &trans         &trans    &none
            >;

            label = "Navigate";
        };

        Fun_Layer {
            bindings = <
&kp C_BRI_UP          &kp F12  &kp F7  &kp F8      &kp F9            &kp C_VOLUME_UP      &trans   &trans     &trans     &trans    &trans    &to 4
&kp C_BRIGHTNESS_DEC  &kp F11  &kp F4  &kp F5      &kp F6            &kp C_VOLUME_DOWN    &kp TAB  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans                &kp F10  &kp F1  &kp F2      &kp F3            &kp C_MUTE           &trans   &trans     &trans     &trans    &trans    &trans
                                       &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT           &trans   &trans     &trans
            >;

            label = "Function";
        };

        Game_Layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R      &kp T             &kp Y  &kp U  &kp I      &kp O    &kp P     &to 0
&kp CAPS   &kp A  &kp S  &kp D      &kp F      &kp G             &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V      &kp B             &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &kp SPACE  &kp LEFT_SHIFT    &mo 1  &mo 2  &mo 3
            >;

            label = "Gaming";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7        &kp N8        &kp N9        &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN      &kp UP        &kp RIGHT     &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
